import express, { response } from 'express'
import cors from 'cors';
import fetch from 'node-fetch';
import querystring from 'querystring';

const app = express()
const port = 3000

// CORS middleware to allow our server to receive requests from any URL source.
app.use(cors())

// We will expect JSON data as the common format used to receive/send data to/from this server.
// i.e. incoming requests will have header Content-Type as application/json, and server will respond with JSON response.
app.use(express.json())

app.get('/', (req, res) => {
    res.json('ExpressJS server response OK!')
})

app.post('/create-empty-playlist', async (req, res) => {
    const {token, user_id, name} = req.body;
    await fetch(`https://api.spotify.com/v1/users/${user_id}/playlists`, {
        method: 'POST',
        headers: {
            'Authorization': `Bearer ${token}`,
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({name: name, description: 'Generated by Spotify Playlist Generator', public: false})
    })
        .then(response => response.json())
        .then(data => {
            res.send(data)
        });
})

//can add more parameter later
app.post('/recommendations', async (req, res) => {
    const {token, country, genre} = req.body;
    await fetch(`https://api.spotify.com/v1/recommendations?market=${country}&seed_genres=${genre}`, {
        method: 'GET',
        headers: {
            'Authorization': `Bearer ${token}`,
            'Content-Type': 'application/json'
        },
    })
        .then(response => response.json())
        .then(data => {
            res.send(data)
        });
})

app.listen(port, () => {
    console.log(`ExpressJS server listening on PORT: ${port}`)
})
